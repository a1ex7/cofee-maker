 /* Mixins */

=size($size)
  width: $size
  height: $size

=round($radius: 50%)
  border-radius: $radius

=bg-center($url)
  background: url($url) center center no-repeat

=hide-text()
  text-indent: -1000px
  overflow: hidden

=crop-text()
  overflow: hidden
  white-space: nowrap
  text-overflow: ellipsis

=transition($property: all)
  transition: $property 0.2s ease-in-out

=placeholder
  &::-webkit-input-placeholder
    @content
  &:-moz-placeholder
    @content
  &::-moz-placeholder
    @content
  &:-ms-input-placeholder
    @content

=reset-btn()
  outline: none
  border: none
  background: none
  // margin: 0
  padding: 0
  cursor: pointer

// My Super mixin for addind arrow to the button (no svg or png, only css block)
//
// width, height - arrow dimensions; direction - arrow direction;
// start - start position in present of button size, hover - hover position in present of button size
// color - arrow color
//
=add-arrow($width: 100%, $height: 20px, $direction: left, $start: 50%, $hover: 90%, $color: #000)
  position: relative
  &:before,
  &:after
    content: ''
    display: block
    width: $width
    height: $height
    position: absolute
    @if $direction == left
      border-left: 2px solid $color
      right: $start
    @if $direction == right
      border-right: 2px solid $color
      left: $start
    +transition()
  &:before
    border-bottom: 1px solid $color
    @if $direction == left
      transform: skew(-45deg)
    @if $direction == right
      transform: skew(45deg)
    bottom: 50%
  &:after
    border-top: 1px solid $color
    @if $direction == left
      transform: skew(45deg)
    @if $direction == right
      transform: skew(-45deg)
    top: 50%
  &:hover
    &:before,
    &:after
      @if $direction == left
        right: $hover
      @if $direction == right
        left: $hover

=align($type: 'hv')
  position: absolute;
  @if ($type == 'hv')
    top: 50%
    left: 50%
    transform: translate(-50%, -50%)
  @else if ($type == 'h')
    left: 50%
    transform: translate(-50%, 0)
  @else if ($type == 'v')
    top: 50%
    transform: translate(0, -50%)

=font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: false )
  @font-face
    font-family: $font-family
    font-weight: $weight
    font-style: $style

    @if $asset-pipeline == true
      src: font-url('#{$file-path}.eot')
      src: font-url('#{$file-path}.eot?#iefix') format('embedded-opentype'), font-url('#{$file-path}.woff') format('woff'), font-url('#{$file-path}.ttf') format('truetype')
    @else
      src: url('#{$file-path}.eot')
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'), url('#{$file-path}.woff') format('woff'), url('#{$file-path}.ttf') format('truetype')

=position($position: relative, $coordinates: null null null null)
  @if type-of($position) == list
    $coordinates: $position
    $position: relative

  $offsets: ( top: nth($coordinates, 1), right: nth($coordinates, 2), bottom: nth($coordinates, 3), left: nth($coordinates, 4) )

  position: $position

  @each $offset, $value in $offsets
    @if is-length($value)
      #{$offset}: $value

// Large Devices, Wide Screens
=ld()
  @media only screen and (max-width : 1440px)
    @content

// Medium Devices, Desktops
=md()
  @media only screen and (max-width : 1024px)
    @content

// Small Devices, Tablets
=sd()
  @media only screen and (max-width : 768px)
    @content

// Extra Small Devices, Phones
=xs()
  @media only screen and (max-width : 480px)
    @content

/* Functions */
$browser-context: $font-size
$base-font-size: $font-size

@function em($pixels, $context: $browser-context)
  @if unitless($pixels)
    $pixels: $pixels * 1px
  @if unitless($context)
    $context: $context * 1px
  @return $pixels / $context * 1em

@function rem($pixels, $context: $base-font-size)
  @if unitless($pixels)
    $pixels: $pixels * 1px
  @if unitless($context)
    $context: $context * 1px
  @return $pixels / $context * 1rem

/* Placeholders */

%section-header
  font: bold 50px $font-second
  letter-spacing: 5px
  text-transform: uppercase
  text-align: center
  color: $dark-color
  margin-bottom: 20px
  +xs()
    font-size: 30px
    letter-spacing: normal
    margin-bottom: 5px
  &--inverse
    color: $white-color

